name: End-to-end tests
on: [pull_request]
jobs:
    cypress-run:
        runs-on: ubuntu-latest
        container: cypress/browsers:node14.17.0-chrome91-ff89
        # Service containers to run with `container-job`
        services:
          # Label used to access the service container
          postgres:
            # Docker Hub image
            image: postgres
            # Provide the password for postgres
            env:
              POSTGRES_PASSWORD: postgres
            # Set health checks to wait until postgres has started
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
            ports:
              - 5432:5432
        steps:
            - name: Checkout
              uses: actions/checkout@v1

            - name: Cache Next artifacts
              uses: actions/cache@v2
              with:
                path: ${{ github.workspace }}/.next/cache
                # Generate a new cache whenever packages or source files change.
                key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                # If source files changed but packages didn't, rebuild from a prior cache.
                restore-keys: |
                  ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

            - name: Cypress run
              uses: cypress-io/github-action@v2
              with:
                  start: |
                    npm run migrate
                    npm run start
                  # quote the url to be safe against YML parsing surprises
                  wait-on: 'http://localhost:3000/manual'
                  quiet: true
                  browser: chrome
                  headless: true

              env:
                  # The hostname used to communicate with the PostgreSQL service container
                  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dev?schema=public"
